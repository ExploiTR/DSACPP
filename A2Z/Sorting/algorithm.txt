Selection Sort :

Pushes the smallest one to the left. 
i = 0 - N
j = i - N
identify smallest in J and push to ith index (swap).

111 6 -1 5 11 10 
-1 6 111 5 11 10 
-1 5 111 6 11 10 
-1 5 6 111 11 10 
-1 5 6 10 11 111 
-1 5 6 10 11 111 

Bubble Sort :

Push the largest one in the left portion of array to the current (rightmost) index.
i =  N-1 -> 1
j =  1 - i-1
make adjacent swaps until the largest one moves to ith pos.

111 6 -1 5 11 10 
6 -1 5 11 10 111 
-1 5 6 10 11 111 
-1 5 6 10 11 111 

Insertion Sort :

Push the smallest one to the left, but happens in chunks.
Motto : Insert the current element into it's correct position.
i = 1 - N-1
j = i - 1
make adjacent swaps from right to left to push the smallest one to left

111 6 -1 5 11 10 
6 111 -1 5 11 10 
-1 6 111 5 11 10 
-1 5 6 111 11 10 
-1 5 6 11 111 10 
-1 5 6 10 11 111 

Merge Sort :

Hypothetically (by index limits) split the array into half consecutively until it's a single valued array.
Merge them from LTR in the recursion tree, while merging make comparison between two Hypothetical arrays
by keeping two pointers and swapping items in correct order then shifting pointers from LTR until all items exhausted.

111 11 10 6 5 -1 
11 111 10 6 5 -1 
10 11 111 6 5 -1 
10 11 111 5 6 -1 
10 11 111 -1 5 6 
-1 5 6 10 11 111 
